{
  "hash": "9bb38a470d6b685c972dc3a0b95ea366",
  "result": {
    "markdown": "---\ntitle: \"Introduction\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n## Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinches <- read_csv(\"data/finch_beaks.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 651 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): species\ndbl (4): band, beak_length_mm, beak_depth_mm, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nfinches <- finches %>% \n  rename(beak_length = beak_length_mm,\n         beak_depth = beak_depth_mm)\n```\n:::\n\n\n## Linear models\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = finches,\n       mapping = aes(x = beak_length,\n                     y = beak_depth,\n                     colour = species)) +\n  geom_point() +\n  facet_wrap(facets = vars(year))\n```\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfortis_1975 <- finches %>% \n  filter(species == \"fortis\",\n         year == 1975)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(fortis_1975, aes(beak_length, beak_depth)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Least-squares regression\n\nFinding the line of best fit gives you the model. Each data point consists of the fitted value (the predicted beak depth at a given beak length), combined with the error. The error is the difference between the fitted value and the data point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfortis_1975_example <- fortis_1975 %>% \n  mutate(min_depth = min(beak_depth),\n         max_depth = max(beak_depth),\n         min_length = min(beak_length),\n         max_length = max(beak_length)) \n\nlm_fortis_1975 <- lm(beak_depth ~ beak_length,\n                     data = fortis_1975)\n\nfortis_1975_example <- lm_fortis_1975 %>% \n  augment() %>% \n  full_join(fortis_1975_example)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining, by = c(\"beak_depth\", \"beak_length\")\n```\n:::\n\n```{.r .cell-code}\nfinch473 <- fortis_1975_example %>%\n  filter(band == 473)\n\nfortis_1975_example %>%\n  ggplot(aes(beak_length, beak_depth)) +\n  geom_point(colour = \"#999999\") +\n  theme_bw() +\n  labs(title = \"Finch 473 (1975)\",\n       x = \"Beak length (mm)\",\n       y = \"Beak depth (mm)\") +\n  geom_point(data = . %>% filter(band == 473),\n             mapping = aes(beak_length, beak_depth),\n             colour = \"#D55E00\",\n             size = 3) +\n  annotate(geom = \"text\", x = 9, y = 9.6, hjust = 0,\n           label = \"observed beak depth\") +\n  geom_segment(data = . %>% filter(band == 473),\n               aes(x = beak_length, xend = beak_length,\n                   y = min_depth, yend = beak_depth),\n               linetype = \"dashed\",\n               colour = \"#D55E00\") +\n  annotate(geom = \"text\", x = 10.55, y = 8, hjust = 0,\n           label = \"observed beak length\") +\n  geom_segment(data = . %>% filter(band == 473),\n               aes(x = min_length, xend = beak_length,\n                   y = beak_depth, yend = beak_depth),\n               linetype = \"dashed\",\n               colour = \"#D55E00\") +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(data = finch473, aes(x = beak_length,\n                                  y = .fitted),\n             colour = \"blue\", size = 3) +\n  geom_segment(data = finch473,\n               aes(x = beak_length, xend = (beak_length + 0.5),\n                   y = .fitted, yend = .fitted),\n               arrow = arrow(ends = \"first\", length = unit(2, \"mm\"))) +\n  annotate(geom = \"text\", x = 11.05, y = finch473$.fitted, hjust = 0,\n           label = \"fitted value\") +\n  geom_segment(data = finch473,\n               aes(x = beak_length, xend =  beak_length,\n                   y = beak_depth, yend = .fitted),\n               arrow = arrow(ends = \"both\", length = unit(2, \"mm\"))) +\n  annotate(geom = \"text\", x = 10.45, y = 9.3, label = \"\\u03b5\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nWe can then perform a linear regression. The question we're asking:\n\n> Is the line of best fit a better predictor of our data than a horizontal line across the average value?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfortis_1975_example %>%\n  ggplot(aes(beak_length, beak_depth)) +\n  geom_point(colour = \"#999999\") +\n  theme_bw() +\n  labs(title = \"Finch beak observations (1975)\",\n       x = \"Beak length (mm)\",\n       y = \"Beak depth (mm)\") +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_hline(yintercept = fortis_1975_example %>%\n               summarise(mean_bd = mean(beak_depth)) %>%\n               pull(),\n             linetype = \"dashed\", colour = \"#D55E00\") +\n  annotate(geom = \"text\", x = 8.5, y = 9.3, hjust = 0,\n           label = \"average beak depth\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfortis_1975_example %>% summarise(mean_bl = mean(beak_length)) %>% pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10.58769\n```\n:::\n:::\n\nWhat we're actually testing is whether the slope of the line of best fit is any different from zero.\n\nTo find the answer, we perform an ANOVA.\n\n### ANOVA on the linear model\n\nWe define the linear model, then perform an ANOVA.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_fortis_1975 <- lm(beak_depth ~ beak_length,\n                     data = fortis_1975)\n\nanova(lm_fortis_1975)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: beak_depth\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nbeak_length   1 115.50 115.504  650.43 < 2.2e-16 ***\nResiduals   314  55.76   0.178                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nThe result suggests that `beak_length` is a statistically significant predictor of `beak_depth`.\n\nWe can write the linear equation, if we know the model coefficients:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_fortis_1975\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = beak_depth ~ beak_length, data = fortis_1975)\n\nCoefficients:\n(Intercept)  beak_length  \n    -0.3444       0.9007  \n```\n:::\n:::\n\n\nThe equation is in the form of:\n\n$Y = \\beta_0 + \\beta_1X$\n\nwhich in our case is\n\n$beak\\_depth = \\beta_0 + \\beta_1 \\times beak\\_length$\n\nand gives us\n\n$beak\\_depth = -0.34 + 0.90 \\times beak\\_length$\n\n### Assumptions\n\n1. Data should be linear\n2. Residuals are normally distributed\n3. Equality of variance\n4. Data are independent\n5. (no influential points)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_fortis_1975 %>% \n  resid_panel(plots = c(\"resid\", \"qq\", \"ls\", \"cookd\"),\n              smoother = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Generalised features\n\nIn this case the assumptions are all met. But what if we have data where that isn't the case? For example, what if we have data where we _can't_ describe the relationship between the variables in a linear way?\n\nLet's look some data that come from an analysis of gene flow across two finch species.\n\nTwo species, _Geospiza fortis_ and _G. scandens_. There are measurements that are split by a uniquely timed event: an particularly strong El Nino event in 1983 changed the vegetation and food supply of the finches, allowing F1 hybrids to survive. These measurements are classed as `early` (pre-1983) and `late` (1983 onwards).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://www.nature.com/articles/s41559-020-1183-9#MOESM2\nfinches_2020 <- read_csv(\"data/41559_2020_1183_MOESM2_ESM.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 180 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Species, Group\ndbl (9): weight, wing, tarsus, blength, bdepth, bwidth, PC1 body, PC1 beak, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\nfinches_2020 <- finches_2020 %>% \n  clean_names() %>% \n  mutate(timepoint = (str_detect(group, \"Late\")),\n         timepoint = if_else(timepoint == FALSE, \"early\", \"late\"),\n         timepoint = factor(timepoint))\n```\n:::\n\n\nVisualising the different groups:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinches_2020 %>% \nggplot(aes(x = blength, y = group,\n           colour = species)) +\n  geom_point() +\n  facet_wrap(vars(timepoint))\n```\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfinches_2020 %>% \n  ggplot(aes(x = bdepth, y = blength,\n             colour = group)) +\n  geom_point() +\n  facet_wrap(vars(species))\n```\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n\n\nWe can see that in the early time point (pre-1983) both species had relatively clear beak shapes. Generally, _G. fortis_ had blunt beaks, whereas _G. scandens_ had pointed beaks.\n\nLet's say we were in a situation where we only had the beak length measurements. Could we make some predictions about the species? Let's first focus on just the early time points.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter for early time points\nearly_finches <- finches_2020 %>% \n  filter(timepoint == \"early\") %>% \n  mutate(pointed_beak = if_else(str_detect(group, \"blunt\"), 0, 1))\n\nggplot(early_finches, aes(x = blength, y = pointed_beak)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nWe could try to model this with the knowledge we've got so far and perform a linear regression analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(early_finches, aes(x = blength, y = pointed_beak)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_early <- lm(pointed_beak ~ blength,\n               data = early_finches)\n\nanova(lm_early)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: pointed_beak\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nblength    1 12.6847 12.6847   292.2 < 2.2e-16 ***\nResiduals 59  2.5612  0.0434                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlm_early %>% \n  resid_panel(plots = c(\"resid\", \"qq\", \"ls\", \"cookd\"),\n              smoother = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlm_early %>% \n  augment() %>% \n  ggplot(aes(x = .resid)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-17-2.png){width=672}\n:::\n:::\n\n\nAssumptions are definitely violated. Surprisingly, the Q-Q plot and histogram of the residuals doesn't look too bad.\n\nBut we can't describe these data with some kind of linear relationship, of course.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_early <- glm(pointed_beak ~ blength,\n                 family = binomial(link = \"logit\"),\n                 data = early_finches)\n\nsummary(glm_early)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = pointed_beak ~ blength, family = binomial(link = \"logit\"), \n    data = early_finches)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.16571  -0.06960   0.00647   0.04931   2.28475  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)   \n(Intercept)  -43.410     15.250  -2.847  0.00442 **\nblength        3.387      1.193   2.839  0.00452 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 84.5476  on 60  degrees of freedom\nResidual deviance:  9.1879  on 59  degrees of freedom\nAIC: 13.188\n\nNumber of Fisher Scoring iterations: 8\n```\n:::\n:::\n\n\nLet's plot the fitted model values:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_early %>% \n  augment() %>% \n  ggplot(aes(x = blength, y = .fitted)) +\n  geom_point(colour = \"blue\")\n```\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nMain points:\n\n* `blength` is a significant predictor of `pointed_beak`\n* the fitted model values are still linear!\n\nThe fitted model values are linear because the non-linear relationship between beak length and beak type is linearised by the model. It does so using a **link function**.\n\nIn this case the default link function for the binomial family of models is the **logit** function.\n\nSo the values we're seeing are on a logit scale. If we wanted to visualise the actual _probabilities_, we could do that as follows (also displaying the model predictions as a dashed line for clarity):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_early %>% \n  augment(type.predict = \"response\") %>% \n  ggplot() +\n  geom_point(aes(x = blength, y = pointed_beak)) +\n  geom_line(aes(x = blength, y = .fitted),\n            linetype = \"dashed\",\n            colour = \"blue\") +\n  geom_point(aes(x = blength, y = .fitted),\n             colour = \"blue\", alpha = 0.4) +\n  labs(title = \"Logistic model predictions for pointed beaks\",\n       x = \"Beak length (mm)\",\n       y = \"Probability\")\n```\n\n::: {.cell-output-display}\n![](glm-introduction_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nFrom this we can see that the probability of having a pointed beak (which is considered a \"success\") is approaching 1 as the beak length gets longer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(modelr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'modelr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:yardstick':\n\n    mae, mape, rmse\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:broom':\n\n    bootstrap\n```\n:::\n\n```{.r .cell-code}\nblength <- data.frame(blength = c(8.2, 9.4, 11.6, 12.8, 13.9, 15.7))\n\nadd_predictions(blength, glm_early,\n                type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  blength         pred\n1     8.2 1.613509e-07\n2     9.4 9.390524e-06\n3    11.6 1.590097e-02\n4    12.8 4.846392e-01\n5    13.9 9.750049e-01\n6    15.7 9.999423e-01\n```\n:::\n:::\n",
    "supporting": [
      "glm-introduction_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}