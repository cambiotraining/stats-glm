---
title: "Count data"
---

```{r}
#| echo: false
#| message: false
#| results: hide
source(file = "setup_files/setup.R")
```

```{python}
#| echo: false
#| message: false
import shutup;shutup.please()
exec(open('setup_files/setup.py').read())
```

::: {.callout-tip}
## Learning outcomes

**Questions**

-   How do we analyse count data?

**Objectives**

-   Be able to perform a poisson regression on count data
:::

## Libraries and functions

::: {.callout-note collapse="true"}
## Click to expand

::: {.panel-tabset group="language"}
## R

### Libraries
### Functions
:::
:::

The examples in this section use the following data sets:

`data/islands.csv`

This is a data set comprising 35 observations of two variables (one dependent and one predictor). This records the number of species recorded on different small islands along with the area (km<sup>2</sup>) of the islands. The variables are `species` and `area`.

The second data set is on seat belts.

The `seatbelts` data set is a multiple time-series data set that was commissioned by the Department of Transport in 1984 to measure differences in deaths before and after front seat belt legislation was introduced on 31st January 1983. It provides monthly total numerical data on a number of incidents including those related to death and injury in Road Traffic Accidents (RTA's). The data set starts in January 1969 and observations run until December 1984.

You can find the file in `data/seatbelts.csv`

## Load and visualise the data

First we load the data, then we visualise it.

::: {.panel-tabset group="language"}
## R

```{r}
#| message: false
#| warning: false
islands <- read_csv("data/islands.csv")
```

Let's have a glimpse at the data:

```{r}
islands
```

:::

Looking at the data, we can see that there are two columns: `species`, which contains the number of species recorded on each island and `area`, which contains the surface area of the island in square kilometers.

We can plot the data:

::: {.panel-tabset group="language"}
## R

```{r}
ggplot(islands, aes(x = area, y = species)) +
  geom_point()
```

:::

It looks as though `area` may have an effect on the number of species that we observe on each island. We note that the response variable is count data and so we try to construct a Poisson regression.

## Constructing a model

::: {.panel-tabset group="language"}
## R

```{r}
glm_isl <- glm(species ~ area,
               data = islands, family = "poisson")
```

and we look at the model summary:

```{r}
summary(glm_isl)
```

The output is strikingly similar to the logistic regression models (who’d have guessed, eh?) and the main numbers to extract from the output are the two numbers underneath `Estimate.Std` in the `Coefficients` table:

```
(Intercept)    4.241129
area           0.035613
```

:::

These are the coefficients of the Poisson model equation and need to be placed in the following formula in order to estimate the expected number of species as a function of island size:

$$ E(species) = \exp(4.24 + 0.036 \times area) $$

Interpreting this requires a bit of thought (not much, but a bit).
The intercept coefficient, `4.24`, is related to the number of species we would expect on an island of zero area (this is statistics, not real life. You’d do well to remember that before you worry too much about what that even means). But in order to turn this number into something meaningful we have to exponentiate it. Since `exp(4.24) ≈ 70`, we can say that the baseline number of species the model expects on any island is 70. This isn’t actually the interesting bit though.

The coefficient of `area` is the fun bit. For starters we can see that it is a positive number which does mean that increasing `area` leads to increasing numbers of `species`. Good so far.

But what does the value `0.036` actually mean? Well, if we exponentiate it as well, we get `exp(0.036) ≈ 1.04`. This means that for every increase in `area` of 1 km^2 (the original units of the area variable), the number of species on the island is multiplied by `1.04`. So, an island of area 1 km^2 will have `1.04 x 70 ≈ 72` species.

So, in order to interpret Poisson coefficients, you have to exponentiate them.

## Plotting the Poisson regression

::: {.panel-tabset group="language"}
## R

```{r}
ggplot(islands, aes(area, species)) +
  geom_point() +
  geom_smooth(method = "glm", se = FALSE, fullrange = TRUE, 
              method.args = list(family = poisson)) +
  xlim(10,50)
```

:::

## Assumptions

As we mentioned earlier, Poisson regressions require that the variance of the data at any point is the same as the mean of the data at that point. We checked that earlier by looking at the residual deviance values.

We can look for influential points using the Cook’s distance plot:

::: {.panel-tabset group="language"}
## R

```{r}
plot(glm_isl , which=4)
```

:::

None of our points have particularly large Cook’s distances and so life is rosy.

## Assessing significance

We can ask the same three questions we asked before.

1. Is the model well-specified?
2. Is the overall model better than the null model?
3. Are any of the individual predictors significant?

Again, in this case, questions 2 and 3 are effectively asking the same thing because we still only have a single predictor variable.

To assess if the model is any good we’ll again use the residual deviance and the residual degrees of freedom.

::: {.panel-tabset group="language"}
## R

```{r}
1 - pchisq(30.437, 33)
```

:::

This gives a probability of `0.60`. This suggests that this model is actually a reasonably decent one and that the data are pretty well supported by the model. For Poisson models this has an extra interpretation. This can be used to assess whether we have significant over-dispersion in our data.

For a Poisson model to be appropriate we need that the variance of the data to be exactly the same as the mean of the data. Visually, this would correspond to the data spreading out more for higher predicted values of `species.` However, we don’t want the data to spread out too much. If that happens then a Poisson model wouldn’t be appropriate.

The easy way to check this is to look at the ratio of the residual deviance to the residual degrees of freedom (in this case `0.922`). For a Poisson model to be valid, this ratio should be about 1. If the ratio is significantly bigger than 1 then we say that we have over-dispersion in the model and we wouldn’t be able to trust any of the significance testing that we are about to do using a Poisson regression.

Thankfully the probability we have just created (`0.60`) is exactly the right one we need to look at to assess whether we have significant over-dispersion in our model.

Secondly, to assess whether the overall model, with all of the terms, is better than the null model we’ll look at the difference in deviances and the difference in degrees of freedom:

::: {.panel-tabset group="language"}
## R

```{r}
1 - pchisq(856.899 - 30.437, 34 - 33)
```

:::

This gives a reported p-value of 0, which is pretty damn small. So, yes, this model is better than nothing at all and species does appear to change with some of our predictors

Finally, we’ll construct an analysis of deviance table to look at the individual terms:

::: {.panel-tabset group="language"}
## R

```{r}
anova(glm_isl , test = "Chisq")
```

The p-value in this table is just as small as we’d expect given our previous result (`<2.2e-16` is pretty close to 0), and we have the nice consistent result that `area` definitely has an effect on `species`.

:::

## Exercises

### Seat belts {#sec-exr_seatbelts}

:::{.callout-exercise}

{{< level 2 >}}

For this exercise we'll be using the data from `data/seatbelts.csv`.

I'd like you to do the following:

1.  Load the data
2.  Visualise the data and create a poisson regression model
3.  Plot the regression model on top of the data
4.  Assess if the model is a decent predictor for the number of fatalities

::: {.callout-answer collapse="true"}

#### Load and visualise the data

First we load the data, then we visualise it.

::: {.panel-tabset group="language"}
## R

```{r}
#| message: false
#| warning: false
seatbelts <- read_csv("data/seatbelts.csv")
```

:::

The data tracks the number of drivers killed in road traffic accidents, before and after the seat belt law was introduced. The information on whether the law was in place is encoded in the `law` column as `0` (law not in place) or `1` (law in place).

There are many more observations when the law was *not* in place, so we need to keep this in mind when we're interpreting the data.

First we have a look at the data comparing no law vs law:

::: {.panel-tabset group="language"}
## R

We have to convert the `law` column to a factor, otherwise R will see it as numerical.

```{r}
seatbelts %>% 
  ggplot(aes(as_factor(law), drivers_killed)) +
   geom_boxplot()
```

The data are recorded by month and year, so we can also display the number of drivers killed by year:

```{r}
seatbelts %>% 
  ggplot(aes(year, drivers_killed)) +
  geom_point()
```

:::

The data look a bit weird. There is quite some variation within years (keeping in mind that the data are aggregated monthly). The data also seems to wave around a bit... with some vague peaks (e.g. 1972 - 1973) and some troughs (e.g. around 1976).

So my initial thought is that these data are going to be a bit tricky to interpret. But that's OK.

#### Constructing a model

::: {.panel-tabset group="language"}
## R

```{r}
glm_stb <- glm(drivers_killed ~ year,
               data = seatbelts, family = "poisson")
```

and we look at the model summary:

```{r}
summary(glm_stb)
```

```
(Intercept)    37.168958
year           0.016373
```
:::

These are the coefficients of the Poisson model equation and need to be placed in the following formula in order to estimate the expected number of species as a function of island size:

$$ E(drivers\_killed) = \exp(37.17 + 0.164 \times year) $$

#### Assessing significance

Is the model well-specified?

::: {.panel-tabset group="language"}
## R

```{r}
1 - pchisq(850.41, 190)
```

This value indicates that the model is actually pretty good. Remember, it is between $[0, 1]$ and the closer to zero, the better the model.
:::

How about the overall fit?

::: {.panel-tabset group="language"}
## R

```{r}
1 - pchisq(984.50 - 850.41, 191 - 190)
```

Again, this indicates that the model is markedly better than the null model.

:::

#### Plotting the regression

::: {.panel-tabset group="language"}
## R

```{r}
#| message: false
#| warning: false
ggplot(seatbelts, aes(year, drivers_killed)) +
  geom_point() +
  geom_smooth(method = "glm", se = FALSE, fullrange = TRUE, 
              method.args = list(family = poisson)) +
  xlim(1970,1985)
```

:::


#### Conclusions

The model we constructed appears to be a decent predictor for the number of fatalities.

:::
:::

## Summary

::: {.callout-tip}
#### Key points

-   Poisson regression is useful when dealing with count data
:::
